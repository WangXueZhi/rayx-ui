{"version":3,"sources":["webpack://rayx-ui/./src/components/VueMarkdown.js","webpack://rayx-ui/./src/views/development/base/base.md","webpack://rayx-ui/./src/views/development/base/index.vue","webpack://rayx-ui/./src/views/development/base/index.vue?c0c3"],"names":["md","markdownIt","highlight","str","lang","hljs","language","ignoreIllegals","value","__","utils","escapeHtml","template","data","sourceData","this","source","props","watches","type","Array","default","String","show","Boolean","html","xhtmlOut","breaks","linkify","emoji","typographer","langPrefix","quotes","tableClass","taskLists","toc","tocId","tocClass","tocFirstLevel","Number","tocLastLevel","tocAnchorLink","tocAnchorClass","tocAnchorLinkSymbol","tocAnchorLinkSpace","tocAnchorLinkClass","anchorAttributes","Object","prerender","Function","postrender","htmlData","computed","tocLastLevelComputed","render","use","subscript","superscript","footnote","deflist","abbreviation","insert","mark","katex","throwOnError","errorColor","tasklists","enabled","checkbox","set","renderer","rules","table_open","defaultLinkRenderer","link_open","tokens","idx","options","env","self","renderToken","attribute","aIndex","attrIndex","attrPush","attrs","tocClassName","anchorLink","anchorLinkSymbol","anchorLinkSpace","anchorClassName","anchorLinkSymbolClassName","tocCallback","tocMarkdown","tocArray","tocHtml","document","getElementById","innerHTML","$emit","outHtml","h","class","beforeMount","$slots","slot","children","$watch","$forceUpdate","forEach","v","module","exports","name","components","VueMarkdown","base","methods"],"mappings":"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","file":"js/735.js","sourcesContent":["import markdownIt from 'markdown-it'\nimport emoji from 'markdown-it-emoji'\nimport subscript from 'markdown-it-sub'\nimport superscript from 'markdown-it-sup'\nimport footnote from 'markdown-it-footnote'\nimport deflist from 'markdown-it-deflist'\nimport abbreviation from 'markdown-it-abbr'\nimport insert from 'markdown-it-ins'\nimport mark from 'markdown-it-mark'\nimport toc from 'markdown-it-toc-and-anchor'\nimport katex from 'markdown-it-katex'\nimport tasklists from 'markdown-it-task-lists'\nimport checkbox from 'markdown-it-checkbox'\nimport hljs from 'highlight.js'\nimport { h } from 'vue'\n\nconst md = new markdownIt({\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return (\n          '<pre><code class=\"hljs\" v-pre>' +\n          hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n          '</code></pre>'\n        )\n      } catch (__) {}\n    }\n\n    return (\n      '<pre><code class=\"hljs\" v-pre>' +\n      md.utils.escapeHtml(str) +\n      '</code></pre>'\n    )\n  }\n})\n\nexport default {\n  md: md,\n\n  template: '<div><slot></slot></div>',\n\n  data() {\n    return {\n      sourceData: this.source\n    }\n  },\n\n  props: {\n    watches: {\n      type: Array,\n      default: () => ['source', 'show', 'toc']\n    },\n    source: {\n      type: String,\n      default: ''\n    },\n    show: {\n      type: Boolean,\n      default: true\n    },\n    highlight: {\n      type: Boolean,\n      default: true\n    },\n    html: {\n      type: Boolean,\n      default: true\n    },\n    xhtmlOut: {\n      type: Boolean,\n      default: true\n    },\n    breaks: {\n      type: Boolean,\n      default: true\n    },\n    linkify: {\n      type: Boolean,\n      default: true\n    },\n    emoji: {\n      type: Boolean,\n      default: true\n    },\n    typographer: {\n      type: Boolean,\n      default: true\n    },\n    langPrefix: {\n      type: String,\n      default: 'language-'\n    },\n    quotes: {\n      type: String,\n      default: '“”‘’'\n    },\n    tableClass: {\n      type: String,\n      default: 'table'\n    },\n    taskLists: {\n      type: Boolean,\n      default: true\n    },\n    toc: {\n      type: Boolean,\n      default: false\n    },\n    tocId: {\n      type: String\n    },\n    tocClass: {\n      type: String,\n      default: 'table-of-contents'\n    },\n    tocFirstLevel: {\n      type: Number,\n      default: 2\n    },\n    tocLastLevel: {\n      type: Number\n    },\n    tocAnchorLink: {\n      type: Boolean,\n      default: true\n    },\n    tocAnchorClass: {\n      type: String,\n      default: 'toc-anchor'\n    },\n    tocAnchorLinkSymbol: {\n      type: String,\n      default: '#'\n    },\n    tocAnchorLinkSpace: {\n      type: Boolean,\n      default: true\n    },\n    tocAnchorLinkClass: {\n      type: String,\n      default: 'toc-anchor-link'\n    },\n    anchorAttributes: {\n      type: Object,\n      default: () => ({})\n    },\n    prerender: {\n      type: Function,\n      default: (sourceData) => {\n        return sourceData\n      }\n    },\n    postrender: {\n      type: Function,\n      default: (htmlData) => {\n        return htmlData\n      }\n    }\n  },\n\n  computed: {\n    tocLastLevelComputed() {\n      return this.tocLastLevel > this.tocFirstLevel\n        ? this.tocLastLevel\n        : this.tocFirstLevel + 1\n    }\n  },\n\n  render() {\n    this.md = md\n      .use(subscript)\n      .use(superscript)\n      .use(footnote)\n      .use(deflist)\n      .use(abbreviation)\n      .use(insert)\n      .use(mark)\n      .use(katex, {\n        throwOnError: false,\n        errorColor: ' #cc0000'\n      })\n      .use(tasklists, {\n        enabled: this.taskLists\n      })\n      .use(checkbox)\n\n    if (this.emoji) {\n      this.md.use(emoji)\n    }\n\n    this.md.set({\n      html: this.html,\n      xhtmlOut: this.xhtmlOut,\n      breaks: this.breaks,\n      linkify: this.linkify,\n      typographer: this.typographer,\n      langPrefix: this.langPrefix,\n      quotes: this.quotes\n    })\n    this.md.renderer.rules.table_open = () =>\n      `<table class=\"${this.tableClass}\">\\n`\n    const defaultLinkRenderer =\n      this.md.renderer.rules.link_open ||\n      function (tokens, idx, options, env, self) {\n        return self.renderToken(tokens, idx, options)\n      }\n    this.md.renderer.rules.link_open = (tokens, idx, options, env, self) => {\n      Object.keys(this.anchorAttributes).map((attribute) => {\n        const aIndex = tokens[idx].attrIndex(attribute)\n        const value = this.anchorAttributes[attribute]\n        if (aIndex < 0) {\n          tokens[idx].attrPush([attribute, value]) // add new attribute\n        } else {\n          tokens[idx].attrs[aIndex][1] = value\n        }\n      })\n      return defaultLinkRenderer(tokens, idx, options, env, self)\n    }\n\n    if (this.toc) {\n      this.md.use(toc, {\n        tocClassName: this.tocClass,\n        tocFirstLevel: this.tocFirstLevel,\n        tocLastLevel: this.tocLastLevelComputed,\n        anchorLink: this.tocAnchorLink,\n        anchorLinkSymbol: this.tocAnchorLinkSymbol,\n        anchorLinkSpace: this.tocAnchorLinkSpace,\n        anchorClassName: this.tocAnchorClass,\n        anchorLinkSymbolClassName: this.tocAnchorLinkClass,\n        tocCallback: (tocMarkdown, tocArray, tocHtml) => {\n          if (tocHtml) {\n            if (this.tocId && document.getElementById(this.tocId)) {\n              document.getElementById(this.tocId).innerHTML = tocHtml\n            }\n\n            this.$emit('toc-rendered', tocHtml)\n          }\n        }\n      })\n    }\n\n    let outHtml = this.show\n      ? this.md.render(this.prerender(this.sourceData))\n      : ''\n    outHtml = this.postrender(outHtml)\n\n    this.$emit('rendered', outHtml)\n    return h('div', {\n      class: {\n        'ra-docs-wrapper': true\n      },\n      innerHTML: outHtml\n    })\n  },\n\n  beforeMount() {\n    if (this.$slots.default) {\n      this.sourceData = ''\n      for (const slot of this.$slots.default()) {\n        this.sourceData += slot.children\n      }\n    }\n\n    this.$watch('source', () => {\n      this.sourceData = this.prerender(this.source)\n      this.$forceUpdate()\n    })\n\n    this.watches.forEach((v) => {\n      this.$watch(v, () => {\n        this.$forceUpdate()\n      })\n    })\n  }\n}\n","module.exports = \"# 创建组件\\n\\n## 用命令创建组件模板\\n```\\nnpm run create -- --name=compnent-name\\n```\\n\\n## 组件命名\\n我们统一使用全小写命名组件，例如：```button```，如果是多单词命名，必须使用```kebab-case```（短横线分隔）的方式命名组件，比如 ```my-component```, 使用命令创建可使用小驼峰、大驼峰、短横线任意一种方式，内部会转换成短横线的命名\\n\\n## 组件目录\\n组件目录名就是组件名，里面必须包含```.vue```，```.scss```，```index.js```三个文件：\\n\\n1. 同组件名的```.vue```单文件组件\\n2. 同组件名的```.scss```文件，因为我们使用scss作为样式预处理\\n3. ```index.js```, 这里要完成对组件的注册函数和导出 \\n4. ```README.md```, 这里是组件的使用文档，会被解析成html，具体请查阅[组件的md编写规范](#/development/md), 如果不展示文档，该文件可以没有\\n\\n目录示例：\\n\\n```\\npackages\\n└─my-component\\n│   │ my-component.vue\\n│   │ my-component.scss\\n│   │ index.js\\n│   │ README.md\\n```\\n\\n```index.js```文件的示例：\\n```js\\nimport Button from './button.vue'\\n\\n// 为组件提供 install 安装方法，供按需引入\\nButton.install = function (Vue) {\\n  Vue.component(Button.name, Button)\\n}\\n\\n// 默认导出组件\\nexport default Button\\n```\\n\\n## 注意\\n1. 如果只需要展示文档，在目录下编写markdown就行，不需要组件文件，参考packages目录下的```grid```\\n2. 如果不需要展示文档，单纯增加组件，在目录下编写组件的文件就行\"","<template>\n  <vue-markdown>{{ base }}</vue-markdown>\n</template>\n\n<script>\nimport VueMarkdown from \"@/components/VueMarkdown\";\nimport base from \"./base.md\";\nexport default {\n  name: \"views.development.base\",\n  components: {\n    VueMarkdown,\n  },\n  data () {\n    return {\n      base: base\n    }\n  },\n  computed: {},\n  methods: {},\n};\n</script>\n","import { render } from \"./index.vue?vue&type=template&id=411ca74a\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}